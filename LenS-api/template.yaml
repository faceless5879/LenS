AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  LenS's API

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
  LambdaFuncRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - lambda.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: LambdaFuncRole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - translate:*
                  - comprehend:DetectDominantLanguage
                  - cloudwatch:GetMetricStatistics
                  - s3:ListAllMyBuckets
                  - s3:ListBucket
                  - s3:GetBucketLocation
                  - iam:ListRoles
                  - iam:GetRole
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"

  LenSApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Dev
      Auth:
        ApiKeyRequired: true
        UsagePlan:
          CreateUsagePlan: PER_API
          Description: Usage plan for this API

  PostTranslateFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: post_translate/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Role: !GetAtt LambdaFuncRole.Arn
      Events:
        ApiKey:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: !Ref LenSApi
            Path: /translate
            Method: post
            Auth:
              ApiKeyRequired: true

  GetApiKeyLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/ReadOnlyAccess

  GetApiKeyValueFunc:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: >
          const AWS = require("aws-sdk");
          const response = require("cfn-response");
          exports.handler = (event, context) => {
            const apiGateway = new AWS.APIGateway();
            apiGateway.getApiKey(
              {
                apiKey: event.ResourceProperties.ApiKeyId,
                includeValue: true
              },
              function (err, ApiKeyData) {
                if (err) {
                  console.log(err, err.stack);
                  response.send(event, context, response.FAILED, {});
                } else {
                  response.send(event, context, response.SUCCESS, {
                    Value: ApiKeyData.value
                  });
                }
              }
            );
          };
      Handler: index.handler
      Runtime: nodejs12.x
      Timeout: 30
      Role: !GetAtt GetApiKeyLambdaExecutionRole.Arn

  GetApiKeyValue:
    Type: Custom::GetApiKeyValue
    Properties:
      ServiceToken: !GetAtt GetApiKeyValueFunc.Arn
      ApiKeyId: !Ref LenSApiApiKey

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  LenSApiEndpoint:
    Description: "API Gateway endpoint URL for Dev stage for translate function"
    Value: !Sub "https://${LenSApi}.execute-api.${AWS::Region}.amazonaws.com/Dev/"

  RestApiKey:
    Value: !GetAtt GetApiKeyValue.Value
